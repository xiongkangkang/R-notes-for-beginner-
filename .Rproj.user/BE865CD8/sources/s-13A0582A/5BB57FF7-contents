---
title: "R 入门笔记 基于薛毅中文教程"
author: "熊康"
date: "`r Sys.Date()`"
output: 
  html_document:
    toc: true
    toc_depth: 2
    toc_float: true
    number_sections: yes
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

#  第一部分：R安装及其初识
##  R GUI及Rstudio的安装
R 软件是全免费的，下载网站：

[https://cran.r-project.org](https://cran.r-project.org)

一般来讲，用户操作更多的是Rstudio而不是R GUI，而Rstudio的应用必须以安装了R GUI为基础，Rstudio的下载网站：

[https://www.rstudio.com/products/rstudio/download/](https://www.rstudio.com/products/rstudio/download/)

**注意事项:**
无论是R GUI还是Rstudio，其安装路径不要有中文，否则会很麻烦。如果已经有中文的话，只能通过"以管理员身份运行",如果还是不行，放弃吧！

##  R的基础功能
R的基础功能，可以把它当做计算器，例如现在还不知道电脑计算功能怎么用的我。当然，也可以当做统计软件。对于R和其他统计软件的比较，百度一下就知道了。

尝试一下计算器的威力：
```{r}
# 计算体重
# 输入体重数据
X1 <- c(35,40,40,42,37,45,43,37,44,42,41,39)
mean(X1)  # 计算体重的均值
sd(X1)    # 计算体重的标准差
```

上述是普通计算器都可以完成的
现在来一个统计软件的：
```{r}
X1<-c(35,40,40,42,37,45,43,37,44,42,41,39)
X2<-c(60,74,64,71,72,68,78,66,70,65,73,75)
plot(X1,X2)
hist(X1)
```

上述两个例子均是手动输入的数据。一般来讲，手动输入数据是不存在的，那么怎么读取数据呢？File > Import Dataset,说实话，我很少导入数据库的数据。基本上都是读取CSV格式的数据，读入之后存为数据框文件（R的数据结构在后面会涉及）。
如何读取CSV格式的文件，以硕士课程：数据挖掘课上的演示数据集heart为例：
```{r}
# 读取CSV文件，将数据集命名为data.heart
data.heart <- read.csv(file.choose())  #该函数默认Header = TRUE 
# 查看数据集
str(data.heart)
# 浏览变量
summary(data.heart)
```

#  数据结构
##  向量
R 的数据结构和其他编程软件的数据结构比较类似，包括向量、数组、矩阵、列表、数据框等等。
与向量相关的操作包括赋值、运算和函数
```{r}
#  向量赋值
X <- c(10.4,5.6,3.1,6.4,21.7)  #将"10.4,5.6,3.1,6.4,21.7"赋值给X
assign("x",c(10.4,5.6,3.1,6.4,21.7)) # 或者使用assign()
y <- c(X,0,X)
X
x
y

#  向量运算
x <- c(-1,0,2)
y <- c(3,8,2)
v <- 2*x + y + 1
v
x *  y
x / y
y^x
exp(x)
sqrt(y)

#  与向量运算有关的函数
x <- c(10,6,4,7,8)
min(x)
max(x)
range(x)
which.min(x)
which.max(x)

#  等差数列、等间隔函数、重复函数、逻辑向量
##  等差数列
2.312:6
4:7.6
n <- 5
1:(n-1)
##  等间隔函数  
##  seq(from=value1,to=value2,by=value3)
seq(-5,5,by=0.2)
##  seq(length=value2,from=value1,by=value3)
s2 <- seq(length=51,from=-5,by=0.2)
##  重复函数
s <- rep(x,times = 3)
x <- c(1,4,6.25)
x
s <- rep(x,times = 3)
s
##  逻辑向量
x <- 1:7
M <- x > 3 #  逻辑运算符有<.<=,>,>=，==(表示等于),！=(表示是否等于)。如果c1和c2是两个逻辑表达式，则c1&c2表示c1"与"c2,c1｜c2 表示c1"或"c2,!c1表示"非c1".
M

#  字符型向量
y <- c("er","sdf","eir","jk","dim")
y
paste("My","Job")  #用paste函数将自变量连接成一个字符串，中间用空格分开
paste("My","Job",sep = "")
paste("X",1:6,sep="")
##  关于paste函数，还有以下几种用法：
paste(1:10)  #  same as as.character(1:10)
paste("Today is",date())
paste(c("a","b"),collapse = ".")
```
